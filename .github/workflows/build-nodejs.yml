name: scm-client

on:
  workflow_dispatch:
    inputs:
      run_ons:
        description: 'OS list'
        required: true
        default: '["windows-2016", "macos-10.15"]'
      branch:
        description: 'branch name'
        required: false
      version:
        description: 'release version str (1.0.1)'
        required: false
        default: 0.0.1
      build_number:
        description : 'build number, empty=run_id'
        required : false

env:
  _GITHUB_PAT: ${{secrets._GITHUB_PAT}}
  VER_NUMBER: ${{github.event.inputs.version}}
  BUILD_NUMBER: ${{github.event.inputs.version}}
  #  RELEASE_TAG: v${{github.event.inputs.version}}
  GIT_REPO_URL: https://github.com/dlsecure/safecrypt-electron

jobs:
  make_scm_client:
    strategy:
      matrix:
        os: ${{fromJson(github.event.inputs.run_ons)}}
    runs-on: ${{matrix.os}}

    steps:
      - name: setup env
        shell: bash
        run: |
          REF=${GITHUB_REF##*/}
          BRANCH="${{github.event.inputs.branch}}"
          BRANCH=${BRANCH:-${REF}}
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: clone source
        uses: actions/checkout@v2
        with:
          repository: ${{env.GIT_REPO_URL}}
          ref: ${{env.BRANCH}}
          path: git
          submodules: true

      - uses: actions/setup-node@v2
        with:
          node-version: '10'

      - name: setup mac env
        if: runner.os == 'macOS'
        shell: bash
        run: |
          echo "GRADLEW=./gradlew" >> $GITHUB_ENV

      - name: setup win env
        if: runner.os == 'windows'
        shell: bash
        run: |
          echo "GRADLEW=.\gradlew.bat" >> $GITHUB_ENV

#      - name: download resources
#        uses: suisei-cn/actions-download-file@v1
#        with:
#          url: ${{env.JDK_URL}}
#          target: ./tools/

#      - name: extract jdk
#        working-directory: ./tools
#        run: |
#          7z x *.zip
#          java -version

      - name: build it
        working-directory: git
        run: |
          ${{env.GRADLEW}}

#      - name: find tarball
#        shell: bash
#        run: |
#          TARBALL=$(find "git/dist" -name "*.tar" -type "f")
#          echo "TARBALL=${TARBALL}" >> $GITHUB_ENV

#      - name: debug
#        working-directory: git
#        shell: bash
#        continue-on-error: true
#        run: |
#          echo $${{steps.findTarball.outputs.found}}

#      - name: upload-artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: artifacts
#          path: git/dist

#      - name: create release with assests
#        if: ${{env.VERSION}}
#        continue-on-error: true
#        uses: phuonghuynh/action-ghrelease@v1.1.0
#        env:
#          GITHUB_TOKEN: ${{env._GITHUB_PAT}}
#        with:
#          #          repository: dlsecure/safecrypt-service
#          commitish: ${{env.BRANCH}}
#          tag_name: ${{env.RELEASE_TAG}}
#          name: Release ${{env.RELEASE_TAG}}
#          files: ${{env.TARBALL}}
