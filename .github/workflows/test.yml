name: sc-installer

on:
  workflow_dispatch:
    inputs:
      run_ons:
        description: 'OS list'
        required: true
        default: '["windows-2016", "macos-10.15"]'
      branch:
        description: 'branch name'
        required: false
      version:
        description: 'version str (1.0.1), empty will disable create-release step'
        required: false

env:
  _GITHUB_PAT: ${{secrets._GITHUB_PAT}}
  VERSION: ${{github.event.inputs.version}}
  RELEASE_TAG: v${{github.event.inputs.version}}

jobs:
  test-build:
    strategy:
      matrix:
        os: ${{fromJson(github.event.inputs.run_ons)}}
    runs-on: ${{matrix.os}}

    steps:
      - name: setup env
        shell: bash
        run: |
          echo "setup clone branch"
          REF=${GITHUB_REF##*/}
          BRANCH="${{github.event.inputs.branch}}"
          BRANCH=${BRANCH:-${REF}}
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: clone source
        uses: actions/checkout@v2
        with:
          repository: dlsecure/safecrypt-service
          token: ${{env._GITHUB_PAT}}
          ref: ${{env.BRANCH}}
          path: git
          submodules: true

      - name: setup mac env
        if: runner.os == 'macOS'
        shell: bash
        run: |
          echo "JDK_URL=https://www.dropbox.com/s/3tvg40lwuivyaek/mac-jdk-9.0.4.zip?dl=1" >> $GITHUB_ENV
          JAVA_HOME="${GITHUB_WORKSPACE}/tools/jdk-9.0.4.jdk/Contents/Home"
          echo "JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "${JAVA_HOME}/bin" >> $GITHUB_PATH
          echo "GRADLEW=./gradlew" >> $GITHUB_ENV

      - name: setup win env
        if: runner.os == 'windows'
        shell: bash
        run: |
          echo "JDK_URL=https://www.dropbox.com/s/z1sh0shlfrdacsl/win-jdk-9.0.4.zip?dl=1" >> $GITHUB_ENV
          JAVA_HOME=${GITHUB_WORKSPACE}\\tools\\jdk-9.0.4
          echo "JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "$JAVA_HOME\\bin" >> $GITHUB_PATH
          echo "GRADLEW=.\gradlew.bat" >> $GITHUB_ENV

      #      - name: setup win path env
      #        if: runner.os == 'windows'
      #        run: |
      #          echo "$env:JAVA_HOME\\bin" | Out-File -FilePath $env:_GITHUB_PATH -Encoding utf8

      - name: download resources
        uses: suisei-cn/actions-download-file@v1
        with:
          url: ${{env.JDK_URL}}
          target: ./tools/

      - name: extract jdk
        working-directory: ./tools
        run: |
          7z x *.zip
          java -version

      - name: build it
        working-directory: git
        run: |
          ${{env.GRADLEW}} prod

      - name: find tarball
        shell: bash
        run: |
          TARBALL=$(find "git/dist" -name "*.tar" -type "f")
          echo "TARBALL=${TARBALL}" >> $GITHUB_ENV

#      - name: debug
#        working-directory: git
#        shell: bash
#        continue-on-error: true
#        run: |
#          echo $${{steps.findTarball.outputs.found}}

#      - name: upload-artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: artifacts
#          path: git/dist

      - name: create release with assests
        if: ${{env.VERSION}}
        continue-on-error: true
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{env._GITHUB_PAT}}
#          GITHUB_REPOSITORY: phuonghuynh/testci3
        with:
          tag_name: ${{env.RELEASE_TAG}}
          name: Release ${{env.RELEASE_TAG}}
          github_repository: phuonghuynh/testci3
#          body: Auto release API ${{env.RELEASE_TAG}} by @ci
#          draft: false
#          prerelease: false
          files: ${{env.TARBALL}}
